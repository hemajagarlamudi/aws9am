1. RDS

--> Amazon Aurora : mysql workbench / pgadmin
--> MySql : MySQL Workbench
--> postgreSQL : PgAdmin
--> MariaDB : Workbench
--> MSSQL : SSMS (Sql Server Management Studio)
--> Oracle : Toad


License : 
--> General Public License
--> LI (License Included)
--> BYOL (bring your own License)


Free Tier : db.t2.micro


For RDS Instances : We won't get any Public IPs. We will get Endpoints.
We cannot view/manage any OS level operations.


Wordpress Task : 

#!/bin/bash
sudo yum -y update
yum install httpd php-mysql -y
amazon-linux-extras install -y php7.3
cd /var/www/html
wget https://wordpress.org/latest.tar.gz
tar -xzf latest.tar.gz
cp -r wordpress/* /var/www/html/
rm -rf wordpress
rm -rf latest.tar.gz
chmod -R 755 wp-content
chown -R apache:apache wp-content
service httpd start
chkconfig httpd on



https://aws.amazon.com/getting-started/projects/deploy-wordpress-with-amazon-rds/


Multi-AZ deployement : Another copy of our DB instance runs in Another AZ in same Region.

Read Replica: Read only copy. 
--> It can perform only Readonly operations.



Task 1 : https://aws.amazon.com/getting-started/projects/deploy-wordpress-with-amazon-rds/

Task 2 : Launch an MSSQL Express edition in RDS and Launch a instance in Public subnet , Install SSMS (SQL Server Management Studio) and connect RDS using endpoint.



Backup on RDS: Snapshots

--> Automatic Snapshots : If we enable "automatic backup", we will get these. We cannot delete AS. AWS creates these AS, when it detects any major changes on db.

--> Manual Snapshots : We need to create manually. Need to delete manually.



Restore from s3: Aurora and Mysql
--> Percona Xtra backup



Amazon Aurora : AWS's own Database..

--> Server : With Writer and Readers
--> Serverless : Give required RAM capacity

Regional : You provision your Aurora database in a single AWS Region.

Global : You can provision your Aurora database in multiple AWS Regions. Writes in the primary AWS Region are replicated with typical latency of less than 1 sec to secondary AWS Regions.

________________________________________________________________________________________

DynamoDB : NoSQL db : Serverless architecture : 

Single digit millisecond latency at any scale..   Mobile, gaming, ad-hoc, IoT... 

Read operation
Write operation 

Min 1
Max 10k


Cache on DynamoDB :  DAX (Dynamodb Accelerator)


Task : https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/TicTacToe.html



Redshift : AWS DW (Data Warehousing)
--> AWS Redshift is AWS own Datawarehousing solution.

Single Node cluster: 
Single Node clusters consist of a single node which performs both leader and compute functions.

Multi Node  Cluster : 
Compute nodes store your data and execute your queries. 
The leader node is the access point for ODBC/JDBC and generates the query plans executed on the compute nodes.


Elasticache : Caching service for RDS. It supports 2 caching engines.
--> Redis
--> MemcacheD

DMS : Database Migration Service

Homogenious : Same db from on-prem to aws : mysql --> mysql
Heterogenious : diff db in on-prem : SCT (Schema Converton tool) : AWS supported db

Go through youtube video
______________________________________________________________________________


Cloudfront : 

Region : Physical / Geographical location : 
AZ : 69 AZs.. 
PoP (Point of Presence) / Edge : 120+

We need to use a service called : Cloudfront 

--> Cloudfront advantage : It can detect and prevent DDoS Attacks.

--> S3 
--> Application ELB
--> Media services


2 Types of : 
--> Web :
--> RTMP :

TTL : Time to Live : 
Min : 0 sec
Default TTL : 86400 Sec (24 Hrs)
Max TTL : 31536000 (365 Days)



Task : Design website with Cloudfront, A ELB and Route53.


____________________________________________________________________________________


Security Services : 

Shared Responsibility/Security Model : 

--> Security OF the Cloud : AWS responsible
--> Security IN the Cloud : We are responsible


____________________________________________________________________________________

Cloudtrail : Logging service in AWS
--> Enabled by defaultly, But stores only Last 90 Days Activities.

We we want to store for unlimited days, Create a trail to an s3 bucket.

--> Data trail : s3 and Lambda
--> management trail : All activities

--> We can Create a dedicated trail for Data and Management events.


Config : Inventory / Change management on our AWS Resources...


____________________________________________________________________________________

ACM : Amazon Certificate Manager : 

http : 
https : SSL / TLS : 

SSL : Secure Socket Layer
TLS : transport Layer Security

Amazon Signed Certificate





























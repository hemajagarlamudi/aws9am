EC2 : Elastic Compute Cloud
		CPU			Cloud
		Memory
		Storage
		GPU
		Application / Software
		Network


Configuration : Guess the capacity : Vendors : 100% along with PO : 3-4 weeks : Installation : OS : Application : UAT : Production

Vertical Scaling : Upgrading same hardware
Horizontal scaling : Distributing the load


On-Demand EC2 Instance : Test the application for the first time, No specific usecases, 
			Pricing : /Sec billing with Min of 60 Sec, No Contract, Monthly

Reserved Instances : For stable workloads, Longtime runs with AWS. 
		Durations : 1 Yr / 3 Yrs

	Standard RI : We canot change the configuration for the duration.
	Convertable RI : We can change the configuration.
  	Scheduled RI : for repeated/persistant requests

	Pricing : Full Upfront : 100% payment while purchasing
		  Partial upfront : Aprox. 30-40% while purchasing, Remaining Monthly
		  No Upfront : Pay Monthly basis

Spot Instances : We must have flexible start / stop, High Config servers at low cost
2 Min warning period, Spot Advisor, Pricing History
We cannot quote more than On-Demand pricing

--> 2 Hr 45 Min , Price is increased, AWS Terminated : 2 Hrs.. 
--> 2 Hr 45 Min, Price not increased, You Terminated instance : 2 Hrs 45 Min.. 

STOP : We can perform stop/start, we will not going to loss any data.
Terminate : Delete

AWS Marketplace : Where we can buy / sell applications.


Launching Windows EC2 Instance : 

1. Select an AMI (Amazon Machine Image : Template of an OS, services and applications) : Windows Server 2012 R2 Base

2. Choose an Instance Type : (t2.micro FREE TIER)

General Purpose : t2, t3		
Compute optimized : c4, c5, c5n, c5d
Memory Optimized : r4, r5, r5d, x1
Storage Optimized : d2, i2, i3
GPU Optimized : P , G

Compute optimized : c4.2xlarge : 8 vCPU, 15 Memory
Memory optimized  : r4.2xlarge : 8 vCPU, 61 Memory


Step 3: Configure Instance Details

--> No Of Instance, Spot, Network (VPC- Default VPC)

Shutdown behavior : STOP / TERMINATE
Enable termination protection : Yes  	(Need to turn off this, when we want to termibate our instance)

Monitoring : Cloudwatch is responsible for Monitoring
	Basic Monitoring : 5 Min (Enabled by defaultly)
	Detailed Monitoring : 1 Min (No Free Tier)


Step 4: Add Storage (EBS) : 30 GB General Purpose SSD

Step 5: Add Tags 

Step 6: Configure Security Group

SG : Firewall at Instance Level. 

(0-65535 Ports / Protocols)

Windows :  RDP (Remote Desktop Protocol):  3389 : 
Linux : SSH (Secure Shell): 22 
http: Port 80 
https : Port 443

Source : 
Custom : We can give any network Ip
MyIP : It picks currently connected networks public IP address
Anywhere : 0.0.0.0/0


EIP : Elastic IP Address : Dedicated IP address allocated to our AWS Account in a region.
We can associate to our required resources.

ENI : Elastic Network Interface : Additional NIC Cards for our EC2 Instance

EC2 Instance Isolation Diagram

Status Check on EC2 Instancce : 
--> Instance Status checks
--> System Status check


Task 1 : Ping an ec2 instance from your local device.

Task 2 : Install IIS in Windows Server and Deliver to everyone. 

Task 3 : Associate an Additional ENI to the server created on Task 2. 

--> Launch a New instance in same region and Verify the Task 2, Task 3 outputs with Private IPs.


Task 4 : Launch a ec2 instance and Create an Additional user, Give local admini permissions and give remote desktop permissions also. And login as Additional user. 


#!/bin/bash
yum update -y
yum install httpd -y
service httpd start
chkconfig httpd on
echo "<h1>Test webpage</h1>" > /var/www/html/index.html




ELB : 

1. Application Elastic Load Balancer : http, https : Nested Round Robin
2. Network ELB (new) : tcp , tls, udp
3. Classic ELB (old) : legacy protocols


For ELB, We don't get an IP address, We can access using DNS Name.

Log : AccessLogs : s3 bucket

http:
2XX --> OK/Success
3XX --> Redirection
4XX --> Client Side
5XX --> Server Side


Task : Launch multiple ec2 instance in multiple AZs, and configure ELB to deliver our website.

Task 2 : Configure Security Groups accordingly.


#!/bin/bash
yum install httpd -y
echo "<h1>This is a webserver running on 8080</h1>" > /var/www/html/index.html
service httpd start
chkconfig httpd on



Task : Configure Application ELB with Multiple target groups, Test Blue and Green mechanism.

Route 8080 traffic to Another Target Group.



Read ELB comparison chart. 
https://aws.amazon.com/elasticloadbalancing/

Application 	
Presentaion 
Session
Transport
Network		
Datalink
Physical











